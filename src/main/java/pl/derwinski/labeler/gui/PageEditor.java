/*
 * Copyright (C) 2018 Dominik Derwiński
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package pl.derwinski.labeler.gui;

import java.awt.Color;
import javax.swing.JColorChooser;
import pl.derwinski.labeler.data.ColorPaint;
import pl.derwinski.labeler.data.LabelFile;
import pl.derwinski.labeler.data.LabelSet;

/**
 *
 * @author Dominik Derwiński
 */
public final class PageEditor extends javax.swing.JPanel implements EditorListener {

  private static final long serialVersionUID = 1L;

  private Editor editor;
  private LabelFile labelFile;

  public PageEditor() {
    initComponents();
  }

  public void startEditing(Editor editor) {
    this.editor = editor;
    changed(editor.getLabelFile(), editor.getLabelSet());
    editor.addListener(this);
  }

  @Override
  public void changed(LabelFile labelFile, LabelSet labelSet) {
    this.labelFile = labelFile;

    NumberFormat format = editor.getFormat();
    txtDPI.setText(format.doubleToString(labelFile.getDpi()));
    txtPageWidth.setText(format.doubleToString(labelFile.getPageWidth()));
    txtPageHeight.setText(format.doubleToString(labelFile.getPageHeight()));
    txtColumnSpacing.setText(format.doubleToString(labelFile.getColumnSpacing()));
    txtRowSpacing.setText(format.doubleToString(labelFile.getRowSpacing()));
    txtTopMargin.setText(format.doubleToString(labelFile.getPageMargins().getTop()));
    txtLeftMargin.setText(format.doubleToString(labelFile.getPageMargins().getLeft()));
    txtBottomMargin.setText(format.doubleToString(labelFile.getPageMargins().getBottom()));
    txtRightMargin.setText(format.doubleToString(labelFile.getPageMargins().getRight()));
    cmdPageColor.setBackground(((ColorPaint) labelFile.getPagePaint()).createColor());
    cmdPageColor.setForeground(((ColorPaint) labelFile.getPagePaint()).createReversedColor());
  }

  @Override
  public void altered(LabelFile labelFile) {
    //
  }

  @Override
  public void altered(LabelSet labelSet) {
    //
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    lblDPI = new javax.swing.JLabel();
    txtDPI = new javax.swing.JTextField();
    lblPageWidth = new javax.swing.JLabel();
    txtPageWidth = new javax.swing.JTextField();
    lblPageHeight = new javax.swing.JLabel();
    txtPageHeight = new javax.swing.JTextField();
    lblColumnSpacing = new javax.swing.JLabel();
    txtColumnSpacing = new javax.swing.JTextField();
    lblRowSpacing = new javax.swing.JLabel();
    txtRowSpacing = new javax.swing.JTextField();
    lblTopMargin = new javax.swing.JLabel();
    txtTopMargin = new javax.swing.JTextField();
    lblLeftMargin = new javax.swing.JLabel();
    txtLeftMargin = new javax.swing.JTextField();
    lblBottomMargin = new javax.swing.JLabel();
    txtBottomMargin = new javax.swing.JTextField();
    lblRightMargin = new javax.swing.JLabel();
    txtRightMargin = new javax.swing.JTextField();
    lblPageColor = new javax.swing.JLabel();
    cmdPageColor = new javax.swing.JButton();

    setMinimumSize(new java.awt.Dimension(335, 386));
    java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
    layout.columnWeights = new double[] {1.0, 1.0};
    setLayout(layout);

    lblDPI.setText("DPI");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(lblDPI, gridBagConstraints);

    txtDPI.setColumns(10);
    txtDPI.setText("0");
    txtDPI.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        txtDPIFocusLost(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(txtDPI, gridBagConstraints);

    lblPageWidth.setText("Page width (mm)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(lblPageWidth, gridBagConstraints);

    txtPageWidth.setColumns(10);
    txtPageWidth.setText("0");
    txtPageWidth.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        txtPageWidthFocusLost(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(txtPageWidth, gridBagConstraints);

    lblPageHeight.setText("Page height (mm)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(lblPageHeight, gridBagConstraints);

    txtPageHeight.setColumns(10);
    txtPageHeight.setText("0");
    txtPageHeight.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        txtPageHeightFocusLost(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(txtPageHeight, gridBagConstraints);

    lblColumnSpacing.setText("Column spacing (mm)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(lblColumnSpacing, gridBagConstraints);

    txtColumnSpacing.setColumns(10);
    txtColumnSpacing.setText("0");
    txtColumnSpacing.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        txtColumnSpacingFocusLost(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(txtColumnSpacing, gridBagConstraints);

    lblRowSpacing.setText("Row spacing (mm)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(lblRowSpacing, gridBagConstraints);

    txtRowSpacing.setColumns(10);
    txtRowSpacing.setText("0");
    txtRowSpacing.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        txtRowSpacingFocusLost(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(txtRowSpacing, gridBagConstraints);

    lblTopMargin.setText("Top margin (mm)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(lblTopMargin, gridBagConstraints);

    txtTopMargin.setColumns(10);
    txtTopMargin.setText("0");
    txtTopMargin.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        txtTopMarginFocusLost(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(txtTopMargin, gridBagConstraints);

    lblLeftMargin.setText("Left margin (mm)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(lblLeftMargin, gridBagConstraints);

    txtLeftMargin.setColumns(10);
    txtLeftMargin.setText("0");
    txtLeftMargin.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        txtLeftMarginFocusLost(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(txtLeftMargin, gridBagConstraints);

    lblBottomMargin.setText("Bottom margin (mm)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(lblBottomMargin, gridBagConstraints);

    txtBottomMargin.setColumns(10);
    txtBottomMargin.setText("0");
    txtBottomMargin.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        txtBottomMarginFocusLost(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(txtBottomMargin, gridBagConstraints);

    lblRightMargin.setText("Right margin (mm)");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(lblRightMargin, gridBagConstraints);

    txtRightMargin.setColumns(10);
    txtRightMargin.setText("0");
    txtRightMargin.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        txtRightMarginFocusLost(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(txtRightMargin, gridBagConstraints);

    lblPageColor.setText("Page color");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(lblPageColor, gridBagConstraints);

    cmdPageColor.setText("...");
    cmdPageColor.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmdPageColorActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
    add(cmdPageColor, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

  private void cmdPageColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPageColorActionPerformed
    Color newColor = JColorChooser.showDialog(this, "Pick page color", cmdPageColor.getBackground());
    if (newColor != null) {
      labelFile.setPagePaint(new ColorPaint(newColor));
      cmdPageColor.setBackground(newColor);
      cmdPageColor.setForeground(((ColorPaint) labelFile.getPagePaint()).createReversedColor());
      editor.triggerAlteredFile();
    }
  }//GEN-LAST:event_cmdPageColorActionPerformed

  private void txtDPIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDPIFocusLost
    editor.setDouble(labelFile, txtDPI, labelFile::setDpi, labelFile::getDpi);
  }//GEN-LAST:event_txtDPIFocusLost

  private void txtPageWidthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPageWidthFocusLost
    editor.setDouble(labelFile, txtPageWidth, labelFile::setPageWidth, labelFile::getPageWidth);
  }//GEN-LAST:event_txtPageWidthFocusLost

  private void txtPageHeightFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPageHeightFocusLost
    editor.setDouble(labelFile, txtPageHeight, labelFile::setPageHeight, labelFile::getPageHeight);
  }//GEN-LAST:event_txtPageHeightFocusLost

  private void txtColumnSpacingFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtColumnSpacingFocusLost
    editor.setDouble(labelFile, txtColumnSpacing, labelFile::setColumnSpacing, labelFile::getColumnSpacing);
  }//GEN-LAST:event_txtColumnSpacingFocusLost

  private void txtRowSpacingFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRowSpacingFocusLost
    editor.setDouble(labelFile, txtRowSpacing, labelFile::setRowSpacing, labelFile::getRowSpacing);
  }//GEN-LAST:event_txtRowSpacingFocusLost

  private void txtTopMarginFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTopMarginFocusLost
    editor.setDouble(labelFile, txtTopMargin, labelFile.getPageMargins()::setTop, labelFile.getPageMargins()::getTop);
  }//GEN-LAST:event_txtTopMarginFocusLost

  private void txtLeftMarginFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLeftMarginFocusLost
    editor.setDouble(labelFile, txtLeftMargin, labelFile.getPageMargins()::setLeft, labelFile.getPageMargins()::getLeft);
  }//GEN-LAST:event_txtLeftMarginFocusLost

  private void txtBottomMarginFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBottomMarginFocusLost
    editor.setDouble(labelFile, txtBottomMargin, labelFile.getPageMargins()::setBottom, labelFile.getPageMargins()::getBottom);
  }//GEN-LAST:event_txtBottomMarginFocusLost

  private void txtRightMarginFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRightMarginFocusLost
    editor.setDouble(labelFile, txtRightMargin, labelFile.getPageMargins()::setRight, labelFile.getPageMargins()::getRight);
  }//GEN-LAST:event_txtRightMarginFocusLost

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton cmdPageColor;
  private javax.swing.JLabel lblBottomMargin;
  private javax.swing.JLabel lblColumnSpacing;
  private javax.swing.JLabel lblDPI;
  private javax.swing.JLabel lblLeftMargin;
  private javax.swing.JLabel lblPageColor;
  private javax.swing.JLabel lblPageHeight;
  private javax.swing.JLabel lblPageWidth;
  private javax.swing.JLabel lblRightMargin;
  private javax.swing.JLabel lblRowSpacing;
  private javax.swing.JLabel lblTopMargin;
  private javax.swing.JTextField txtBottomMargin;
  private javax.swing.JTextField txtColumnSpacing;
  private javax.swing.JTextField txtDPI;
  private javax.swing.JTextField txtLeftMargin;
  private javax.swing.JTextField txtPageHeight;
  private javax.swing.JTextField txtPageWidth;
  private javax.swing.JTextField txtRightMargin;
  private javax.swing.JTextField txtRowSpacing;
  private javax.swing.JTextField txtTopMargin;
  // End of variables declaration//GEN-END:variables
}
