/*
 * Copyright (C) 2018 Dominik Derwiński
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package pl.derwinski.labeler.gui;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Toolkit;
import pl.derwinski.labeler.LabelRenderer;
import pl.derwinski.labeler.data.LabelFile;
import pl.derwinski.labeler.data.LabelSet;

/**
 *
 * @author Dominik Derwiński
 */
public final class PreviewPane extends javax.swing.JPanel implements EditorListener {

  private static final long serialVersionUID = 1L;

  private final LabelRenderer renderer = new LabelRenderer();

  private int dpi = Toolkit.getDefaultToolkit().getScreenResolution();
  private boolean paint = false;
  private String label = null;
  private Editor editor;
  private Paint pagePaint;
  private LabelSet labelSet;

  public PreviewPane() {
    initComponents();
  }

  public void startEditing(Editor editor) {
    this.editor = editor;
    changed(editor.getLabelFile(), editor.getLabelSet());
    editor.addListener(this);
  }

  @Override
  public void changed(LabelFile labelFile, LabelSet labelSet) {
    this.labelSet = labelSet;
    altered(labelFile);
    altered(labelSet);
  }

  @Override
  public void altered(LabelFile labelFile) {
    try {
      pagePaint = labelFile.getPagePaint().createPaint();
    } finally {
      paintPane.repaint();
    }
  }

  @Override
  public void altered(LabelSet labelSet) {
    try {
      renderer.configure(labelSet, dpi);
      renderer.validate();
      Dimension d = renderer.getBounds();
      d.width = Math.min(d.width, 2048);
      d.height = Math.min(d.height, 2048);
      paintPane.setMaximumSize(d);
      paintPane.setPreferredSize(d);
      paintPane.setMinimumSize(d);
      scrollPane.getViewport().revalidate();
      paint = true;
      if ((labelSet.getLabels() != null) && (labelSet.getLabels().isEmpty() == false)) {
        label = labelSet.getLabels().get(0);
      } else {
        label = null;
      }
    } catch (Exception ex) {
      paint = false;
      label = null;
      lblInfo.setText(ex.getMessage());
    } finally {
      paintPane.repaint();
    }
  }

  private void paintPreview(Graphics g) {
    Graphics2D g2 = (Graphics2D) g.create();
    try {
      LabelRenderer.initGraphics(g2);
      if (pagePaint != null) {
        g2.setPaint(pagePaint);
        g2.fillRect(0, 0, paintPane.getWidth(), paintPane.getHeight());
      }
      if (paint) {
        renderer.render(0, 0, g2, label);
      }
    } finally {
      g2.dispose();
    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    buttonPane = new javax.swing.JPanel();
    cmdScreenDPI = new javax.swing.JButton();
    cmd300DPI = new javax.swing.JButton();
    cmd600DPI = new javax.swing.JButton();
    scrollPane = new javax.swing.JScrollPane();
    paintPane = new javax.swing.JPanel(){

      @Override
      protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        paintPreview(g);
      }

    };
    lblInfo = new javax.swing.JLabel();

    setLayout(new java.awt.BorderLayout(5, 5));

    cmdScreenDPI.setText("Screen DPI");
    cmdScreenDPI.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmdScreenDPIActionPerformed(evt);
      }
    });
    buttonPane.add(cmdScreenDPI);

    cmd300DPI.setText("300 DPI");
    cmd300DPI.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmd300DPIActionPerformed(evt);
      }
    });
    buttonPane.add(cmd300DPI);

    cmd600DPI.setText("600 DPI");
    cmd600DPI.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cmd600DPIActionPerformed(evt);
      }
    });
    buttonPane.add(cmd600DPI);

    add(buttonPane, java.awt.BorderLayout.NORTH);

    javax.swing.GroupLayout paintPaneLayout = new javax.swing.GroupLayout(paintPane);
    paintPane.setLayout(paintPaneLayout);
    paintPaneLayout.setHorizontalGroup(
      paintPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 397, Short.MAX_VALUE)
    );
    paintPaneLayout.setVerticalGroup(
      paintPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 272, Short.MAX_VALUE)
    );

    scrollPane.setViewportView(paintPane);

    add(scrollPane, java.awt.BorderLayout.CENTER);

    lblInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblInfo.setText("...");
    add(lblInfo, java.awt.BorderLayout.SOUTH);
  }// </editor-fold>//GEN-END:initComponents

  private void cmdScreenDPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdScreenDPIActionPerformed
    dpi = Toolkit.getDefaultToolkit().getScreenResolution();
    altered(labelSet);
  }//GEN-LAST:event_cmdScreenDPIActionPerformed

  private void cmd300DPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd300DPIActionPerformed
    dpi = 300;
    altered(labelSet);
  }//GEN-LAST:event_cmd300DPIActionPerformed

  private void cmd600DPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd600DPIActionPerformed
    dpi = 600;
    altered(labelSet);
  }//GEN-LAST:event_cmd600DPIActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel buttonPane;
  private javax.swing.JButton cmd300DPI;
  private javax.swing.JButton cmd600DPI;
  private javax.swing.JButton cmdScreenDPI;
  private javax.swing.JLabel lblInfo;
  private javax.swing.JPanel paintPane;
  private javax.swing.JScrollPane scrollPane;
  // End of variables declaration//GEN-END:variables
}
